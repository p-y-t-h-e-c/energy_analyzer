name: ci

on:
  push:
    branches:
      - 'main'
      - 'refactor/**'

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/energy_analyzer:latest

  deploy_via_ssh:
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "Generating .env file"
          echo "# Autogenerated .env file" > .env
      # echo "POSTGRES_USER: ${{ secrets.POSTGRES_USER }}" >> .env
      # echo "POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}" >> .env
      # echo "POSTGRES_DB: ${{ secrets.POSTGRES_DB }}" >> .env
      # echo "OCTOPUS_ACCOUNT_NO: ${{ secrets.OCTOPUS_ACCOUNT_NO }}" >> .env
      # echo "OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}" >> .env
      # echo "SOLIS_KEY_ID: ${{ secrets.SOLIS_KEY_ID }}" >> .env
      # echo "SOLIS_KEY_SECRET: ${{ secrets.SOLIS_KEY_SECRET }}" >> .env
      # echo "ELECTRICITY_MPAN: ${{ secrets.ELECTRICITY_MPAN }}" >> .env
      # echo "ELECTRICITY_SERIAL_NO: ${{ secrets.ELECTRICITY_SERIAL_NO }}" >> .env
      # echo "GAS_MPRN: ${{ secrets.GAS_MPRN }}" >> .env
      # echo "GAS_SERIAL_NO: ${{ secrets.GAS_SERIAL_NO }}" >> .env
      # echo "DATABASE_URL: ${{ secrets.DATABASE_URL }}" >> .env
      # echo "PUSHSTAQ_API_KEY: ${{ secrets.PUSHSTAQ_API_KEY}}" >> .env
      # Copy docker-compose and .env files to target server
      - name: copy files to target server via scp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: 22
          key: ${{ secrets.DEPLOY_KEY }}
          source: "docker-compose.yaml,.env"
          target: "~/.deploy/${{ github.event.repository.name }}/"
